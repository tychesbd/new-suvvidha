{"version":3,"file":"static/js/403.a7010610.chunk.js","mappings":"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","sources":["components/vendor/VendorBookingList.js","pages/vendor/Bookings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Box,\r\n  CircularProgress,\r\n  Grid\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\n\r\n// Styled components\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  fontWeight: 'bold',\r\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : theme.palette.grey[100],\r\n}));\r\n\r\nconst StatusChip = styled(Chip)(({ theme, status }) => {\r\n  let color = theme.palette.info.main;\r\n  let backgroundColor = theme.palette.info.light;\r\n  \r\n  if (status === 'completed') {\r\n    color = theme.palette.success.main;\r\n    backgroundColor = theme.palette.success.light;\r\n  } else if (status === 'cancelled') {\r\n    color = theme.palette.error.main;\r\n    backgroundColor = theme.palette.error.light;\r\n  } else if (status === 'in-progress') {\r\n    color = theme.palette.warning.main;\r\n    backgroundColor = theme.palette.warning.light;\r\n  } else if (status === 'pending') {\r\n    color = theme.palette.info.main;\r\n    backgroundColor = theme.palette.info.light;\r\n  }\r\n  \r\n  return {\r\n    color: color,\r\n    backgroundColor: backgroundColor,\r\n    fontWeight: 'bold',\r\n    '& .MuiChip-label': {\r\n      textTransform: 'capitalize',\r\n    },\r\n  };\r\n});\r\n\r\nconst InfoItem = ({ icon, label, value }) => (\r\n  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n    <Box sx={{ color: 'primary.main', mr: 2 }}>{icon}</Box>\r\n    <Box>\r\n      <Typography variant=\"caption\" color=\"text.secondary\">\r\n        {label}\r\n      </Typography>\r\n      <Typography variant=\"body1\">{value}</Typography>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nconst VendorBookingList = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [statusDialogOpen, setStatusDialogOpen] = useState(false);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [newStatus, setNewStatus] = useState('');\r\n  const [statusNote, setStatusNote] = useState('');\r\n  \r\n  // Fetch vendor's assigned bookings from API\r\n  useEffect(() => {\r\n    const fetchVendorBookings = async () => {\r\n      try {\r\n        const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n        \r\n        if (!userInfo || !userInfo.token) {\r\n          setError('You must be logged in to view bookings');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        \r\n        const response = await axios.get('/api/bookings/vendor', config);\r\n        setBookings(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || 'Failed to fetch bookings');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchVendorBookings();\r\n  }, []);\r\n\r\n  // Handle opening status update dialog\r\n  const handleUpdateStatusClick = (booking) => {\r\n    setSelectedBooking(booking);\r\n    setNewStatus(booking.status);\r\n    setStatusNote(booking.statusNote || '');\r\n    setStatusDialogOpen(true);\r\n  };\r\n\r\n  // Handle status dialog close\r\n  const handleStatusDialogClose = () => {\r\n    setStatusDialogOpen(false);\r\n    setSelectedBooking(null);\r\n    setNewStatus('');\r\n    setStatusNote('');\r\n  };\r\n\r\n  // Handle booking status update\r\n  const handleUpdateStatus = async () => {\r\n    if (!selectedBooking || !newStatus) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n      \r\n      if (!userInfo || !userInfo.token) {\r\n        setError('You must be logged in to update booking status');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      \r\n      // Make API call to update booking status\r\n      const { data } = await axios.put(\r\n        `/api/bookings/${selectedBooking._id}/vendor-status`,\r\n        { status: newStatus, statusNote },\r\n        config\r\n      );\r\n      \r\n      // Update the booking status in the local state\r\n      const updatedBookings = bookings.map(booking => {\r\n        if (booking._id === selectedBooking._id) {\r\n          return { ...booking, status: newStatus, statusNote };\r\n        }\r\n        return booking;\r\n      });\r\n      \r\n      setBookings(updatedBookings);\r\n      setLoading(false);\r\n      handleStatusDialogClose();\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to update booking status');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return (\r\n      <Paper elevation={2} sx={{ p: 3, mt: 2, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n        <CircularProgress size={40} sx={{ mr: 2 }} />\r\n        <Typography variant=\"body1\">Loading bookings...</Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n  \r\n  // Render error state\r\n  if (error) {\r\n    return (\r\n      <Paper elevation={2} sx={{ p: 3, mt: 2 }}>\r\n        <Typography variant=\"body1\" color=\"error\" align=\"center\">\r\n          {error}\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n  \r\n  // Render empty state if no bookings\r\n  if (bookings.length === 0) {\r\n    return (\r\n      <Paper elevation={2} sx={{ p: 3, mt: 2 }}>\r\n        <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n          You don't have any assigned bookings.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} elevation={2} sx={{ mt: 2 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Booking ID</StyledTableCell>\r\n              <StyledTableCell>Customer</StyledTableCell>\r\n              <StyledTableCell>Service</StyledTableCell>\r\n              <StyledTableCell>Location</StyledTableCell>\r\n              <StyledTableCell>Status</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Array.isArray(bookings) && bookings.map((booking) => (\r\n              <TableRow key={booking._id} hover>\r\n                <TableCell>{booking._id.substring(0, 8)}...</TableCell>\r\n                <TableCell>{booking.customer.name}</TableCell>\r\n                <TableCell>{booking.serviceName}</TableCell>\r\n                <TableCell>{booking.customer.location}</TableCell>\r\n                <TableCell>\r\n                  <StatusChip \r\n                    label={booking.status} \r\n                    status={booking.status} \r\n                    size=\"small\" \r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"primary\" \r\n                    size=\"small\"\r\n                    onClick={() => handleUpdateStatusClick(booking)}\r\n                    disabled={booking.status === 'cancelled'}\r\n                  >\r\n                    Update Status\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Update Status Dialog */}\r\n      <Dialog open={statusDialogOpen} onClose={handleStatusDialogClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Update Booking Status</DialogTitle>\r\n        <DialogContent>\r\n          {selectedBooking && (\r\n            <>\r\n              <Box sx={{ mb: 3, mt: 2 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Booking Details:\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <InfoItem \r\n                      icon={<PersonIcon />}\r\n                      label=\"Customer Name\"\r\n                      value={selectedBooking.customer.name}\r\n                    />\r\n                    <InfoItem \r\n                      icon={<PhoneIcon />}\r\n                      label=\"Phone Number\"\r\n                      value={selectedBooking.customer.phoneNumber}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <InfoItem \r\n                      icon={<LocationOnIcon />}\r\n                      label=\"Location\"\r\n                      value={selectedBooking.customer.location}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              <TextField\r\n                select\r\n                label=\"Update Status\"\r\n                value={newStatus}\r\n                onChange={(e) => setNewStatus(e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n              >\r\n                <MenuItem value=\"in-progress\">In Progress</MenuItem>\r\n                <MenuItem value=\"completed\">Completed</MenuItem>\r\n                <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n              </TextField>\r\n              \r\n              <TextField\r\n                label=\"Status Note (Optional)\"\r\n                value={statusNote}\r\n                onChange={(e) => setStatusNote(e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={3}\r\n                placeholder=\"Add any notes about this status update\"\r\n              />\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleStatusDialogClose} color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleUpdateStatus} \r\n            color=\"primary\" \r\n            variant=\"contained\"\r\n            disabled={!newStatus || loading}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <CircularProgress size={20} sx={{ mr: 1 }} color=\"inherit\" />\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              'Update Status'\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VendorBookingList;","import React from 'react';\r\nimport { Typography, Box, Paper } from '@mui/material';\r\nimport VendorBookingList from '../../components/vendor/VendorBookingList';\r\n\r\nconst Bookings = () => {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        My Assigned Bookings\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"text.secondary\" paragraph>\r\n        View and manage bookings assigned to you by admin\r\n      </Typography>\r\n      \r\n      <Paper elevation={0} sx={{ p: 0 }}>\r\n        <VendorBookingList />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Bookings;"],"names":["StyledTableCell","styled","TableCell","_ref","theme","fontWeight","backgroundColor","palette","mode","grey","StatusChip","Chip","_ref2","status","color","info","main","light","success","error","warning","textTransform","InfoItem","_ref3","icon","label","value","_jsxs","Box","sx","display","alignItems","mb","children","_jsx","mr","Typography","variant","VendorBookingList","bookings","setBookings","useState","loading","setLoading","setError","statusDialogOpen","setStatusDialogOpen","selectedBooking","setSelectedBooking","newStatus","setNewStatus","statusNote","setStatusNote","useEffect","async","userInfo","JSON","parse","localStorage","getItem","token","config","headers","Authorization","response","axios","get","data","_error$response","_error$response$data","message","fetchVendorBookings","handleStatusDialogClose","Paper","elevation","p","mt","justifyContent","CircularProgress","size","align","length","_Fragment","TableContainer","component","Table","TableHead","TableRow","TableBody","Array","isArray","map","booking","hover","_id","substring","customer","name","serviceName","location","Button","onClick","handleUpdateStatusClick","disabled","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","gutterBottom","Grid","container","spacing","item","xs","md","PersonIcon","PhoneIcon","phoneNumber","LocationOnIcon","TextField","select","onChange","e","target","margin","required","MenuItem","multiline","rows","placeholder","DialogActions","put","updatedBookings","_error$response2","_error$response2$data","Bookings","paragraph"],"sourceRoot":""}